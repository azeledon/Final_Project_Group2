-- How many customers are there in the database?
SELECT COUNT(*) FROM customers;

-- What is the total revenue generated by product type?
SELECT products.product_type, SUM(sales.total_price) as total_revenue
FROM sales
JOIN products ON sales.product_id = products.product_ID
GROUP BY products.product_type;

--How many products were sold in a particular time period?
SELECT SUM(quantity) as total_quantity
FROM sales
JOIN orders ON sales.order_id = orders.order_id
WHERE orders.order_date BETWEEN '2021-01-01' AND '2021-04-30';

--What is the average price per unit for a specific product type?
SELECT product_type, AVG(price) as avg_price_per_unit
FROM products
WHERE product_type = 'Shirt'
GROUP BY product_type;

SELECT product_type, AVG(price) as avg_price_per_unit
FROM products
WHERE product_type = 'Jacket'
GROUP BY product_type;

SELECT product_type, AVG(price) as avg_price_per_unit
FROM products
WHERE product_type = 'Trousers'
GROUP BY product_type;

--How many orders have been made by each customer?
SELECT customers.customer_name, COUNT(orders.order_id) as num_orders
FROM customers
LEFT JOIN orders ON customers.customer_id = orders.customer_id
GROUP BY customers.customer_name;

--What is the total revenue generated by each state
SELECT customers.state, SUM(sales.total_price) as total_revenue
FROM customers
JOIN orders ON customers.customer_id = orders.customer_id
JOIN sales ON orders.order_id = sales.order_id
GROUP BY customers.state;

--What is the total revenue generated by each state
SELECT customers.city, SUM(sales.total_price) as total_revenue
FROM customers
JOIN orders ON customers.customer_id = orders.customer_id
JOIN sales ON orders.order_id = sales.order_id
GROUP BY customers.city;

----Inferential Statistics

--Calculate the total quantity sold for each product and size combination
SELECT 
    p.product_type,
    p.product_name,
    p.size,
    SUM(s.quantity) AS total_quantity_sold
FROM 
    products p
    JOIN sales s ON p.product_id = s.product_id
GROUP BY 
    p.product_type,
    p.product_name,
    p.size
ORDER BY 
    total_quantity_sold DESC;

-- Join the new table with the customer table to identify demographic information for each customer and calculate the total quantity sold:

SELECT 
    p.product_type,
    p.product_name,
    p.size,
    c.gender,
    c.age,
    c.city,
    c.state,
    c.country,
    SUM(s.quantity) AS total_quantity_sold
FROM 
    products p
    JOIN sales s ON p.product_id = s.product_id
    JOIN orders o ON s.order_id = o.order_id
    JOIN customers c ON o.customer_id = c.customer_id
GROUP BY 
    p.product_type,
    p.product_name,
    p.size,
    c.gender,
    c.age,
    c.city,
    c.state,
    c.country
ORDER BY 
    total_quantity_sold DESC;
	
--Determine which product types and sizes are most profitable, taking into account both sales volume and profit margins. 

SELECT 
    p.product_type,
    p.size,
    SUM(s.total_price) AS total_revenue,
    SUM(s.total_price - (s.quantity * p.price)) AS total_profit
FROM 
    products p
    JOIN sales s ON p.product_id = s.product_id
GROUP BY 
    p.product_type,
    p.size
ORDER BY 
    total_profit DESC;

--Calculate total profit of sales
SELECT 
    SUM(s.total_price) AS total_revenue,
    SUM(s.quantity * p.price) AS total_cost,
    SUM(s.total_price - s.quantity * p.price) AS total_profit
FROM 
    products p
    JOIN sales s ON p.product_id = s.product_id;